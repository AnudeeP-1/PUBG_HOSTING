{"ast":null,"code":"var _jsxFileName = \"D:\\\\JAI_PUBG\\\\FRONT-END\\\\pubg_tournment\\\\src\\\\Pages\\\\login.js\";\nimport React from 'react';\nimport ErrorModel from '../UIElements/Error';\nimport Card from '../UIElements/Card';\nimport LoadingSpinner from '../UIElements/LoadingSpinner';\n\nconst Login = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModel, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, !isLoginMode && /*#__PURE__*/React.createElement(ImageUpload, {\n    center: true,\n    id: \"image\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 27\n    }\n  }), !isLoginMode && /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"name\",\n    type: \"text\",\n    label: \"User Name\",\n    value: \"\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Enter your name\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"email\",\n    type: \"email\",\n    label: \"Email\",\n    value: \"\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Enter a valid email address\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"password\",\n    value: \"\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Enter proper password\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: LoginHandler,\n    disabled: !formstate.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, isLoginMode ? 'LOGIN' : 'SIGNUP')), /*#__PURE__*/React.createElement(Button, {\n    onClick: SwitchToSignup,\n    size: \"small\",\n    inverse: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 1\n    }\n  }, isLoginMode ? 'Click here for Signup' : ' Back to Login')));\n};\n\nexport default Login;","map":{"version":3,"sources":["D:/JAI_PUBG/FRONT-END/pubg_tournment/src/Pages/login.js"],"names":["React","ErrorModel","Card","LoadingSpinner","Login","props","error","clearError","isLoading","isLoginMode","inputHandler","VALIDATOR_REQUIRE","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","LoginHandler","formstate","isValid","SwitchToSignup"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;AAEA,MAAMC,KAAK,GAACC,KAAK,IAAE;AACf,sBAEI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEC,KAAnB;AAA0B,IAAA,OAAO,EAAEC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,eAIA,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAECC,SAAS,iBAAI,oBAAC,cAAD;AAAgB,IAAA,SAAS,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFd,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,CAACC,WAAD,iBAAgB,oBAAC,WAAD;AAAa,IAAA,MAAM,MAAnB;AAAoB,IAAA,EAAE,EAAC,OAAvB;AAA+B,IAAA,OAAO,EAAEC,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlB,EAEC,CAACD,WAAD,iBACA,oBAAC,KAAD;AACA,IAAA,OAAO,EAAC,OADR;AAEA,IAAA,EAAE,EAAC,MAFH;AAGA,IAAA,IAAI,EAAC,MAHL;AAIA,IAAA,KAAK,EAAC,WAJN;AAKA,IAAA,KAAK,EAAC,EALN;AAMA,IAAA,UAAU,EAAE,CAACE,iBAAiB,EAAlB,CANZ;AAOA,IAAA,SAAS,EAAC,iBAPV;AAQA,IAAA,OAAO,EAAED,YART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,eAaA,oBAAC,KAAD;AACA,IAAA,OAAO,EAAC,OADR;AAEA,IAAA,EAAE,EAAC,OAFH;AAGA,IAAA,IAAI,EAAC,OAHL;AAIA,IAAA,KAAK,EAAC,OAJN;AAKA,IAAA,KAAK,EAAC,EALN;AAMA,IAAA,UAAU,EAAE,CAACE,eAAe,EAAhB,CANZ;AAOA,IAAA,SAAS,EAAC,6BAPV;AAQA,IAAA,OAAO,EAAEF,YART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbA,eAuBC,oBAAC,KAAD;AACA,IAAA,OAAO,EAAC,OADR;AAED,IAAA,EAAE,EAAC,UAFF;AAGD,IAAA,KAAK,EAAC,EAHL;AAID,IAAA,IAAI,EAAC,UAJJ;AAKD,IAAA,KAAK,EAAC,UALL;AAMD,IAAA,UAAU,EAAE,CAACG,mBAAmB,CAAC,CAAD,CAApB,CANX;AAOD,IAAA,SAAS,EAAC,uBAPT;AAQD,IAAA,OAAO,EAAEH,YARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBD,eAgCA,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEI,YAA/B;AAA6C,IAAA,QAAQ,EAAE,CAACC,SAAS,CAACC,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,WAAW,GAAE,OAAF,GAAU,QAD1B,CAhCA,CAJA,eAuCR,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEQ,cAAjB;AAAiC,IAAA,IAAI,EAAC,OAAtC;AAA8C,IAAA,OAAO,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuDR,WAAW,GAAE,uBAAF,GAA0B,gBAA5F,CAvCQ,CAJA,CAFJ;AAiDH,CAlDD;;AAoDA,eAAeL,KAAf","sourcesContent":["import React from 'react';\r\n\r\nimport ErrorModel from '../UIElements/Error'\r\nimport Card from '../UIElements/Card'\r\nimport LoadingSpinner from '../UIElements/LoadingSpinner'\r\n\r\nconst Login=props=>{\r\n    return(\r\n       \r\n        <React.Fragment>\r\n        \r\n        <ErrorModel error={error} onClear={clearError}/>\r\n        \r\n        <Card className=\"authentication\">\r\n        \r\n        {isLoading && <LoadingSpinner asOverlay/>}\r\n        <h2>Login</h2>\r\n        <form>\r\n         {!isLoginMode && <ImageUpload center id=\"image\" onInput={inputHandler}/>}\r\n        {!isLoginMode && \r\n         <Input\r\n         element='input'\r\n         id=\"name\"\r\n         type=\"text\"\r\n         label='User Name'\r\n         value=''\r\n         validators={[VALIDATOR_REQUIRE()]}\r\n         errorText=\"Enter your name\"\r\n         onInput={inputHandler}/>\r\n        }\r\n        <Input\r\n        element='input'\r\n        id=\"email\"\r\n        type=\"email\"\r\n        label='Email'\r\n        value=''\r\n        validators={[VALIDATOR_EMAIL()]}\r\n        errorText=\"Enter a valid email address\"\r\n        onInput={inputHandler}/>\r\n\r\n         <Input\r\n         element='input'\r\n        id=\"password\"\r\n        value=''\r\n        type=\"password\"\r\n        label='Password'\r\n        validators={[VALIDATOR_MINLENGTH(5)]}\r\n        errorText=\"Enter proper password\"\r\n        onInput={inputHandler}/>\r\n        <Button type=\"submit\" onClick={LoginHandler} disabled={!formstate.isValid}>\r\n            {isLoginMode? 'LOGIN':'SIGNUP'}</Button>\r\n        </form>\r\n<Button onClick={SwitchToSignup} size='small' inverse>{isLoginMode? 'Click here for Signup':' Back to Login'}</Button>\r\n    </Card>\r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}