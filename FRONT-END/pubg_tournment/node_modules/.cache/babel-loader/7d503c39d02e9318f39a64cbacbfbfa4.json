{"ast":null,"code":"// import React, { useReducer,useEffect } from 'react';\n// import { validate } from '../../utilities/validater';\n// import './Input.css';\n// const inputReducer = (state, action) => {\n//   switch (action.type) {\n//     case 'CHANGE':\n//       return {\n//         ...state,\n//         value: action.val,\n//         isValid: validate(action.val, action.validators)\n//       };\n//     case 'TOUCH': {\n//       return {\n//         ...state,\n//         isTouched: true\n//       }\n//     }\n//     default:\n//       return state;\n//   }\n// };\n// const Input = props => {\n//   const [inputState, dispatch] = useReducer(inputReducer, {\n//     value: props.value||'',\n//     isTouched: false,\n//     isValid:props.isValid|| false\n//   });\n//   const changeHandler = event => {\n//     dispatch({\n//       type: 'CHANGE',\n//       val: event.target.value,\n//       validators: props.validators\n//     });\n//   };\n//   const touchHandler = () => {\n//     dispatch({\n//       type: 'TOUCH'\n//     });\n//   };\n//   const {id, onInput}=props;\n//   const {value, isValid}=inputState;\n//   useEffect(()=>{\n//     onInput(id,value,isValid)},\n//     [id,value,isValid,onInput]\n//   );\n//   const element =\n//     props.element === 'input' ? (\n//       <input\n//         id={props.id}\n//         type={props.type}\n//         placeholder={props.placeholder}\n//         onChange={changeHandler}\n//         onBlur={touchHandler}\n//         value={inputState.value}\n//       />\n//     ) : (\n//       <textarea\n//         id={props.id}\n//         rows={props.rows || 3}\n//         onChange={changeHandler}\n//         onBlur={touchHandler}\n//         value={inputState.value}\n//       />\n//     );\n//   return (\n//     <div\n//       className={`form-control ${!inputState.isValid && inputState.isTouched &&\n//         'form-control--invalid'}`}\n//     >\n//       <label htmlFor={props.id}>{props.label}</label>\n//       {element}\n//       {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n//     </div>\n//   );\n// };\n// export default Input;","map":{"version":3,"sources":["D:/JAI_PUBG/FRONT-END/pubg_tournment/src/FormElements/Input.js"],"names":[],"mappings":"AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useReducer,useEffect } from 'react';\r\n\r\n// import { validate } from '../../utilities/validater';\r\n// import './Input.css';\r\n\r\n// const inputReducer = (state, action) => {\r\n//   switch (action.type) {\r\n//     case 'CHANGE':\r\n//       return {\r\n//         ...state,\r\n//         value: action.val,\r\n//         isValid: validate(action.val, action.validators)\r\n//       };\r\n//     case 'TOUCH': {\r\n//       return {\r\n//         ...state,\r\n//         isTouched: true\r\n//       }\r\n//     }\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const Input = props => {\r\n//   const [inputState, dispatch] = useReducer(inputReducer, {\r\n//     value: props.value||'',\r\n//     isTouched: false,\r\n//     isValid:props.isValid|| false\r\n//   });\r\n\r\n//   const changeHandler = event => {\r\n//     dispatch({\r\n//       type: 'CHANGE',\r\n//       val: event.target.value,\r\n//       validators: props.validators\r\n//     });\r\n//   };\r\n\r\n//   const touchHandler = () => {\r\n//     dispatch({\r\n//       type: 'TOUCH'\r\n//     });\r\n//   };\r\n//   const {id, onInput}=props;\r\n//   const {value, isValid}=inputState;\r\n//   useEffect(()=>{\r\n//     onInput(id,value,isValid)},\r\n//     [id,value,isValid,onInput]\r\n//   );\r\n\r\n//   const element =\r\n//     props.element === 'input' ? (\r\n//       <input\r\n//         id={props.id}\r\n//         type={props.type}\r\n//         placeholder={props.placeholder}\r\n//         onChange={changeHandler}\r\n//         onBlur={touchHandler}\r\n//         value={inputState.value}\r\n//       />\r\n//     ) : (\r\n//       <textarea\r\n//         id={props.id}\r\n//         rows={props.rows || 3}\r\n//         onChange={changeHandler}\r\n//         onBlur={touchHandler}\r\n//         value={inputState.value}\r\n//       />\r\n//     );\r\n\r\n//   return (\r\n//     <div\r\n//       className={`form-control ${!inputState.isValid && inputState.isTouched &&\r\n//         'form-control--invalid'}`}\r\n//     >\r\n//       <label htmlFor={props.id}>{props.label}</label>\r\n//       {element}\r\n//       {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Input;\r\n"]},"metadata":{},"sourceType":"module"}