{"ast":null,"code":"var _jsxFileName = \"D:\\\\JAI_PUBG\\\\FRONT-END\\\\pubg_tournment\\\\src\\\\Pages\\\\login.js\";\nimport React, { useState } from 'react';\nimport ErrorModel from '../UIElements/Error';\nimport firebase, { auth, provider } from './firebase.js';\nimport Card from '../UIElements/Card';\nimport LoadingSpinner from '../UIElements/LoadingSpinner';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../FormElements/validater';\nimport Input from '../FormElements/Input';\nimport Button from '../FormElements/Button';\nimport { useForm } from '../Hook/Form-hook';\n\nconst Login = props => {\n  const [isLoading, setLoading] = useState(false);\n  const [otp, setotp] = useState(null);\n  const [formstate, inputHandler, setFormData] = useForm({\n    phone: {\n      value: '',\n      isValid: false\n    },\n    otp: undefined\n  }, false);\n  const [vissibleVerify, setVissibleVerify] = useState(false);\n\n  const sendOTP = async event => {\n    event.preventDefault();\n    setVissibleVerify(true);\n    setFormData({ ...formstate.inputs,\n      phone: { ...formstate.inputs.phone,\n        isValid: false\n      },\n      otp: {\n        value: '',\n        isValid: false\n      }\n    }, false);\n    var recaptcha = new firebase.auth.RecaptchaVerifier('recaptcha', {\n      size: \"invisible\",\n      callback: function (response) {\n        console.log(\"captcha resolved\");\n      }\n    });\n    var number = '+91' + formstate.inputs.phone.value;\n\n    try {\n      await firebase.auth().signInWithPhoneNumber(number, recaptcha);\n    } catch (err) {\n      console.log(\"OTP not sent due to \" + err.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Continue with your phone\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"phone\",\n    type: \"phone\",\n    label: \"Enter your valid phone number\",\n    value: \"\",\n    validators: [VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(6)],\n    errorText: \"Please fill this with valid number\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: sendOTP,\n    disabled: !formstate.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"SEND OTP\"), isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"recaptcha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 10\n    }\n  })), vissibleVerify && /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 28\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"otp\",\n    type: \"otp\",\n    label: \"Enter OTP you have recieved\",\n    value: \"\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Wrong OTP, please check again\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: event => {\n      event.preventDefault();\n      setotp(formstate.inputs.otp.value);\n      if (code === null) return;\n      event.confirm(otp).then(function (result) {\n        console.log(result.user);\n      }).catch(function (error) {\n        console.error(error);\n      });\n      console.log(formstate);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"Verify\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["D:/JAI_PUBG/FRONT-END/pubg_tournment/src/Pages/login.js"],"names":["React","useState","ErrorModel","firebase","auth","provider","Card","LoadingSpinner","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","Input","Button","useForm","Login","props","isLoading","setLoading","otp","setotp","formstate","inputHandler","setFormData","phone","value","isValid","undefined","vissibleVerify","setVissibleVerify","sendOTP","event","preventDefault","inputs","recaptcha","RecaptchaVerifier","size","callback","response","console","log","number","signInWithPhoneNumber","err","message","code","confirm","then","result","user","catch","error"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\n\r\nimport ErrorModel from '../UIElements/Error';\r\nimport firebase,{auth,provider} from './firebase.js';\r\nimport Card from '../UIElements/Card'\r\nimport LoadingSpinner from '../UIElements/LoadingSpinner'\r\nimport {VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH} from '../FormElements/validater'\r\nimport Input from '../FormElements/Input'\r\nimport Button from '../FormElements/Button'\r\nimport {useForm} from '../Hook/Form-hook'\r\n\r\nconst Login=props=>{\r\n    const [isLoading,setLoading]=useState(false);\r\n    const [otp,setotp]=useState(null);\r\n    const [formstate,inputHandler,setFormData]=useForm(\r\n        {\r\n        phone:{\r\n            value:'',\r\n            isValid:false\r\n        },\r\n        otp:undefined\r\n        },false);\r\n\r\n    const [vissibleVerify,setVissibleVerify]=useState(false);\r\n\r\n  const sendOTP=async (event)=>{\r\n      event.preventDefault();\r\n      setVissibleVerify(true);\r\n      setFormData({\r\n          ...formstate.inputs,\r\n          phone:{\r\n              ...formstate.inputs.phone,\r\n              isValid:false\r\n          },\r\n          otp:{\r\n              value:'',\r\n              isValid:false\r\n          }\r\n      },false);\r\n    var recaptcha = new firebase.auth.RecaptchaVerifier('recaptcha',{\r\n        size:\"invisible\",\r\n        callback:function (response){\r\n            console.log(\"captcha resolved\");\r\n        }\r\n    });\r\n    var number = '+91'+formstate.inputs.phone.value;\r\n    try{\r\n    await firebase.auth().signInWithPhoneNumber(number,recaptcha);\r\n    }catch(err){\r\n        console.log(\"OTP not sent due to \"+err.message); \r\n    }\r\n  }\r\n\r\n    return(\r\n    <React.Fragment>\r\n    <Card className=\"authentication\">\r\n        <h2>Continue with your phone</h2>\r\n        <form>\r\n            <Input\r\n                element='input'\r\n                id=\"phone\"\r\n                type=\"phone\"\r\n                label='Enter your valid phone number'\r\n                value=''\r\n                validators={[VALIDATOR_REQUIRE(),VALIDATOR_MINLENGTH(6)]}\r\n                errorText=\"Please fill this with valid number\"\r\n                onInput={inputHandler}\r\n            />    \r\n            <Button \r\n                type=\"submit\" \r\n                onClick={sendOTP}\r\n                disabled={!formstate.isValid}>\r\n                     SEND OTP\r\n            </Button>\r\n            {isLoading && <LoadingSpinner asOverlay/>}\r\n            \r\n         <div id=\"recaptcha\"></div>\r\n        </form>\r\n        {vissibleVerify && <form>\r\n            <Input\r\n                element='input'\r\n                id=\"otp\"\r\n                type=\"otp\"\r\n                label='Enter OTP you have recieved'\r\n                value=''\r\n                validators={[VALIDATOR_REQUIRE()]}\r\n                errorText=\"Wrong OTP, please check again\"\r\n                onInput={inputHandler}\r\n            />\r\n            <Button \r\n                type=\"submit\" \r\n                onClick={(event)=>{\r\n                    event.preventDefault();\r\n                    setotp(formstate.inputs.otp.value)\r\n                    if(code === null) return;      \r\n                    event.confirm(otp)\r\n                        .then(function (result) {\r\n                             console.log(result.user);\r\n                        })\r\n                        .catch(function (error) {\r\n                             console.error( error);\r\n                    });\r\n                    console.log(formstate);\r\n                 }}>\r\n                     Verify\r\n            </Button>\r\n        </form>}\r\n    </Card>\r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}