{"ast":null,"code":"var _jsxFileName = \"D:\\\\JAI_PUBG\\\\FRONT-END\\\\pubg_tournment\\\\src\\\\Pages\\\\roomDisplay.js\";\nimport React from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport Button from '../FormElements/Button';\nimport { useHttpClient } from '../Hook/Http-Hook';\nimport Card from '../UIElements/Card';\nimport ErrorModal from '../UIElements/Error';\nimport LoadingSpinner from '../UIElements/LoadingSpinner';\n\nconst display = props => {\n  const [id, setId] = useState(null);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const auth = useContext(AuthContext);\n  useEffect(() => {\n    const getRoomId = async () => {\n      try {\n        const room_id = await sendRequest(`http://localhost:5000/JAI_PUBG/${auth.UserId}/ROOM_ID`);\n        setId(room_id.RoomID);\n        console.log('dp shetty ' + room_id.RoomID + ' is room id we got');\n      } catch (err) {}\n    };\n\n    getRoomId();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 23\n    }\n  }), error && !isLoading && /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 33\n    }\n  }), !isLoading && !!id && /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 32\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Join for Room Id \", id), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    to: \"/\",\n    exact: true,\n    danger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Okay\")), !isLoading && !id && /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Soon you will get Room Id, Please wait\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    to: \"/\",\n    exact: true,\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Okay\")));\n};\n\nexport default display;","map":{"version":3,"sources":["D:/JAI_PUBG/FRONT-END/pubg_tournment/src/Pages/roomDisplay.js"],"names":["React","AuthContext","Button","useHttpClient","Card","ErrorModal","LoadingSpinner","display","props","id","setId","useState","isLoading","error","sendRequest","clearError","auth","useContext","useEffect","getRoomId","room_id","UserId","RoomID","console","log","err"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;AAEA,MAAMC,OAAO,GAACC,KAAK,IAAE;AACjB,QAAM,CAACC,EAAD,EAAIC,KAAJ,IAAWC,QAAQ,CAAC,IAAD,CAAzB;AACA,QAAM;AAACC,IAAAA,SAAD;AAAWC,IAAAA,KAAX;AAAiBC,IAAAA,WAAjB;AAA6BC,IAAAA;AAA7B,MAAyCZ,aAAa,EAA5D;AACA,QAAMa,IAAI,GAACC,UAAU,CAAChB,WAAD,CAArB;AAEAiB,EAAAA,SAAS,CAAC,MAAI;AACX,UAAMC,SAAS,GAAC,YAAU;AACzB,UAAG;AACC,cAAMC,OAAO,GAAC,MAAMN,WAAW,CAAE,kCAAiCE,IAAI,CAACK,MAAO,UAA/C,CAA/B;AACAX,QAAAA,KAAK,CAACU,OAAO,CAACE,MAAT,CAAL;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAaJ,OAAO,CAACE,MAArB,GAA4B,oBAAxC;AACC,OAJL,CAIK,OAAMG,GAAN,EAAU,CAAE;AAEjB,KAPD;;AAQAN,IAAAA,SAAS;AACX,GAVQ,EAUP,EAVO,CAAT;AAYA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCP,SAAS,iBAAI,oBAAC,cAAD;AAAgB,IAAA,SAAS,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADd,EAGCC,KAAK,IAAI,CAACD,SAAV,iBAAuB,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEC,KAAnB;AAA0B,IAAA,OAAO,EAAEE,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHxB,EAKC,CAACH,SAAD,IAAc,CAAC,CAACH,EAAhB,iBAAsB,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAsBA,EAAtB,CADmB,eAEnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFmB,eAGnB,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,GAAX;AAAe,IAAA,KAAK,MAApB;AAAqB,IAAA,MAAM,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHmB,CALvB,EAWC,CAACG,SAAD,IAAc,CAACH,EAAf,iBAAqB,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADc,eAEd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFc,eAGd,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,GAAX;AAAe,IAAA,KAAK,MAApB;AAAqB,IAAA,OAAO,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHc,CAXtB,CADJ;AAmBH,CApCD;;AAsCA,eAAeF,OAAf","sourcesContent":["import React from 'react'\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport Button from '../FormElements/Button';\r\nimport { useHttpClient } from '../Hook/Http-Hook';\r\nimport Card from '../UIElements/Card';\r\nimport ErrorModal from '../UIElements/Error';\r\nimport LoadingSpinner from '../UIElements/LoadingSpinner';\r\n\r\nconst display=props=>{\r\n    const [id,setId]=useState(null);\r\n    const {isLoading,error,sendRequest,clearError}=useHttpClient();\r\n    const auth=useContext(AuthContext)\r\n    \r\n    useEffect(()=>{\r\n       const getRoomId=async ()=>{\r\n        try{\r\n            const room_id=await sendRequest(`http://localhost:5000/JAI_PUBG/${auth.UserId}/ROOM_ID`);\r\n            setId(room_id.RoomID);\r\n            console.log('dp shetty '+room_id.RoomID+' is room id we got');\r\n            }catch(err){}\r\n    \r\n       }\r\n       getRoomId();\r\n    },[]);\r\n\r\n    return(\r\n        <React.Fragment>\r\n        {isLoading && <LoadingSpinner asOverlay/>}\r\n\r\n        {error && !isLoading && <ErrorModal error={error} onClear={clearError}/>}\r\n\r\n        {!isLoading && !!id && <Card className=\"authentication\">\r\n            <h1>Join for Room Id {id}</h1>\r\n            <hr/>\r\n            <Button to='/' exact danger>Okay</Button>\r\n        </Card>}\r\n\r\n        {!isLoading && !id && <Card className='authentication'>\r\n                <h1>Soon you will get Room Id, Please wait</h1>\r\n                <hr/>\r\n                <Button to='/' exact primary>Okay</Button>\r\n            </Card>}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default display;"]},"metadata":{},"sourceType":"module"}