{"ast":null,"code":"var _jsxFileName = \"D:\\\\JAI_PUBG\\\\FRONT-END\\\\pubg_tournment\\\\src\\\\Pages\\\\findMatch.js\";\nimport React, { useContext, useState, useEffect, useRef } from 'react';\nimport Select from 'react-select';\nimport './findMatch.css';\nimport Input from '../FormElements/Input';\nimport { VALIDATOR_REQUIRE } from '../FormElements/validater';\nimport Card from '../UIElements/Card';\nimport Button from '../FormElements/Button';\nimport { useForm } from '../Hook/Form-hook';\nimport { AuthContext } from '../context/AuthContext';\nimport { useHttpClient } from '../Hook/Http-Hook';\nimport { Link } from 'react-router-dom';\nimport LoadingSpinner from '../UIElements/LoadingSpinner';\nimport ErrorModal from '../UIElements/Error'; // import GPayButton from 'react-google-pay-button'\n\nconst Signup = props => {\n  const auth = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const options = [{\n    value: '1',\n    label: 'One'\n  }, {\n    value: '2',\n    label: 'Two'\n  }, {\n    value: '3',\n    label: 'Three'\n  }, {\n    value: '4',\n    label: 'Four'\n  }];\n  const [optionsFine, setOPtionsFine] = useState([]);\n  const [RRselected, setRRselected] = useState(false);\n  const [AVAIL, setAVAIL] = useState();\n  const [emptySEAT, setemptySEAT] = useState(false);\n  useEffect(() => {\n    const send = async () => {\n      document.body.style.backgroundImage = \"url('https://www.hdwallpapers.in/download/alan_walker_a_ap_rocky_live_fast_pubg_4k-3840x2160.jpg')\";\n      document.body.style.backgroundRepeat = 'no-repeat';\n      document.body.style.backgroundSize = 'cover';\n      console.log(auth.UserId + \" is stored id\");\n\n      try {\n        const responseData = await sendRequest(`http://localhost:5000/JAI_PUBG/${auth.UserId}/SEAT`);\n        console.log(\"response for seat is\" + responseData.SEAT);\n        setAVAIL(responseData.SEAT);\n        console.log('avail is ' + AVAIL);\n        if (AVAIL === 0) setemptySEAT(true);else if (AVAIL === 2) {\n          //1-3,2-2,3-1\n          if (auth.Players.length > AVAIL) {\n            setOPtionsFine(options.slice(0, 4 - auth.Players.length));\n          } else {\n            setOPtionsFine(options.slice(0, AVAIL));\n          }\n        } else if (AVAIL === 1) setOPtionsFine(options.slice(0, AVAIL));else setOPtionsFine(options.slice(0, 4 - auth.Players.length));\n        console.log(\"options fine is \" + optionsFine.length);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    send();\n  }, [sendRequest, auth.UserId, AVAIL, auth.Players.length]);\n  const [selected, setSelected] = useState(0);\n  const [formstate, inputHandler] = useForm({\n    first: undefined,\n    second: undefined,\n    third: undefined,\n    fourth: undefined\n  }, false);\n\n  const handleSelection = selectedValue => {\n    setSelected(selectedValue.value);\n  };\n\n  const submitHandler = async event => {\n    event.preventDefault(); // setLoacalStoring(true);\n\n    console.log(formstate.inputs + ' is from state and selected' + selected);\n    var PArray = [formstate.inputs.first.value];\n    if (selected > 1) PArray.push(formstate.inputs.second.value);else if (selected > 2) PArray.push(formstate.inputs.third.value);else PArray.push(formstate.inputs.fourth.value); // const formData=new FormData();\n    //   formData.append('phonenumber',auth.Phone);\n    //   formData.append('players',PArray);\n    //   formData.append('uid',auth.UserID)\n\n    const formData = JSON.stringify({\n      phonenumber: auth.Phone,\n      players: PArray,\n      uid: auth.UserId\n    });\n    console.log('form data' + formData);\n\n    try {\n      const responseData = await sendRequest(`http://localhost:5000/JAI_PUBG/Register`, 'POST', {\n        'Content-Type': 'application/json'\n      }, formData); //responese handling\n\n      console.log(responseData.Users.phonenumber + '\\n' + responseData.Users._id + '\\n' + responseData.Users.players + ' is response of register');\n      auth.LOGIN(responseData.Users._id, responseData.Users.phonenumber, responseData.Users.players);\n    } catch (err) {}\n  }; //GPay code\n  // const loadPaymentDataHandler = paymentData => {\n  //   console.log('App.loadPaymentDataHandler: paymentData', paymentData)\n  //   // const paymentToken = paymentData.paymentMethodData.tokenizationData.token\n  // }\n  // const paymentAuthorizedHandler = paymentData => {\n  //   console.log('App.paymentAuthorizedHandler: paymentData', paymentData)\n  //   // const paymentToken = paymentData.paymentMethodData.tokenizationData.token\n  //   // TODO execute payment\n  // }\n  // const onUserCanceledHandler = paymentRequest => {\n  //   console.log('App.onUserCanceledHandler: paymentRequest', paymentRequest)\n  // }\n  // const paymentDataChangedHandler = paymentData => {\n  //   console.log('App.paymentDataChangedHandler: paymentData', paymentData)\n  // }\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  })), !auth.isLogedIn && /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"authentication__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, \" YOU ARE NOT LOGED IN\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, \"Click here\"))), auth.isLogedIn && auth.Players.length === 4 && /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"authentication__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, \" YOU ALREADY REGISTERED MAX SEAT\")), !isLoading && auth.isLogedIn && emptySEAT && /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 56\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"authentication__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, \" ALL SEATS ARE SALED\")), auth.isLogedIn && !emptySEAT && /*#__PURE__*/React.createElement(\"form\", {\n    className: \"selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    theme: theme => ({ ...theme,\n      borderRadius: 10,\n      colors: { ...theme.colors,\n        primary25: 'lightblue',\n        primary: 'black'\n      }\n    }),\n    placeholder: \"Select the number of players,you want to REGISTER\",\n    defaultValue: selected,\n    onChange: handleSelection,\n    options: optionsFine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  })), selected && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, \"You have to pay \", selected * 10, \"\\u20B9 \"), selected && /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, selected > 0 && /*#__PURE__*/React.createElement(Input, {\n    id: \"first\",\n    type: \"text\",\n    label: \"Enter First player name as per PUBG\",\n    value: \"\",\n    element: \"input\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Enter the field as per PUBG account, otherwise you won't allow for match\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 30\n    }\n  }), selected > 1 && /*#__PURE__*/React.createElement(Input, {\n    id: \"second\",\n    type: \"text\",\n    element: \"input\",\n    label: \"Enter Second player name as per PUBG\",\n    value: \"\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Enter the field as per PUBG account, otherwise you won't allow for match\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 30\n    }\n  }), selected > 2 && /*#__PURE__*/React.createElement(Input, {\n    id: \"third\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Enter Third player name as per PUBG\",\n    value: \"\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Enter the field as per PUBG account, otherwise you won't allow for match\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 31\n    }\n  }), selected > 3 && /*#__PURE__*/React.createElement(Input, {\n    id: \"fourth\",\n    type: \"text\",\n    element: \"input\",\n    label: \"Enter Fourth player name as per PUBG\",\n    value: \"\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Enter the field as per PUBG account, otherwise you won't allow for match\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: () => {\n      setRRselected(!RRselected);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 18\n    }\n  }), \"By clicking this u r dead\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: submitHandler,\n    disabled: !RRselected || !formstate.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 18\n    }\n  }, \"JAI PUBG\"))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["D:/JAI_PUBG/FRONT-END/pubg_tournment/src/Pages/findMatch.js"],"names":["React","useContext","useState","useEffect","useRef","Select","Input","VALIDATOR_REQUIRE","Card","Button","useForm","AuthContext","useHttpClient","Link","LoadingSpinner","ErrorModal","Signup","props","auth","isLoading","error","sendRequest","clearError","options","value","label","optionsFine","setOPtionsFine","RRselected","setRRselected","AVAIL","setAVAIL","emptySEAT","setemptySEAT","send","document","body","style","backgroundImage","backgroundRepeat","backgroundSize","console","log","UserId","responseData","SEAT","Players","length","slice","err","selected","setSelected","formstate","inputHandler","first","undefined","second","third","fourth","handleSelection","selectedValue","submitHandler","event","preventDefault","inputs","PArray","push","formData","JSON","stringify","phonenumber","Phone","players","uid","Users","_id","LOGIN","isLogedIn","theme","borderRadius","colors","primary25","primary","isValid"],"mappings":"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","sourcesContent":["import React, { useContext, useState,useEffect, useRef } from 'react'\r\nimport Select from 'react-select'\r\n\r\nimport './findMatch.css'\r\nimport Input from '../FormElements/Input'\r\nimport {VALIDATOR_REQUIRE} from '../FormElements/validater'\r\nimport Card from '../UIElements/Card'\r\nimport Button from '../FormElements/Button'\r\nimport {useForm} from '../Hook/Form-hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport {useHttpClient} from '../Hook/Http-Hook'\r\nimport { Link } from 'react-router-dom'\r\nimport LoadingSpinner from '../UIElements/LoadingSpinner'\r\nimport ErrorModal from '../UIElements/Error'\r\n\r\n// import GPayButton from 'react-google-pay-button'\r\n\r\nconst Signup=props=>{\r\n\r\n  const auth=useContext(AuthContext);\r\n  const {isLoading,error,sendRequest,clearError}=useHttpClient();\r\n\r\n  const options=[\r\n    {value:'1',label:'One'},\r\n    {value:'2',label:'Two'},\r\n    {value:'3',label:'Three'},\r\n    {value:'4',label:'Four'}\r\n  ];\r\n  const [optionsFine,setOPtionsFine]=useState([]);\r\n\r\n  const [RRselected,setRRselected]=useState(false);\r\n  const [AVAIL, setAVAIL] = useState();\r\n  const [emptySEAT,setemptySEAT]=useState(false)\r\n\r\n  useEffect(() => {\r\n    const send = async () => {\r\n      document.body.style.backgroundImage=\"url('https://www.hdwallpapers.in/download/alan_walker_a_ap_rocky_live_fast_pubg_4k-3840x2160.jpg')\";\r\n      document.body.style.backgroundRepeat='no-repeat';\r\n      document.body.style.backgroundSize='cover';\r\n      console.log(auth.UserId+\" is stored id\");\r\n      try {\r\n       const responseData= await sendRequest(`http://localhost:5000/JAI_PUBG/${auth.UserId}/SEAT`);\r\n        console.log(\"response for seat is\"+responseData.SEAT);\r\n        setAVAIL(responseData.SEAT);\r\n        console.log('avail is '+AVAIL);\r\n        if(AVAIL===0 ) setemptySEAT(true)\r\n        else if(AVAIL===2){//1-3,2-2,3-1\r\n          if(auth.Players.length>AVAIL){\r\n            setOPtionsFine(options.slice(0,4-(auth.Players.length)));\r\n          }\r\n          else{\r\n            setOPtionsFine(options.slice(0,AVAIL));\r\n          }\r\n        }\r\n      \r\n        else if(AVAIL===1)  setOPtionsFine(options.slice(0,AVAIL));\r\n        else setOPtionsFine(options.slice(0,4-(auth.Players.length)));\r\n    console.log(\"options fine is \"+optionsFine.length);\r\n    }\r\n       catch (err) {console.log(err);}\r\n    };\r\n    send();\r\n\r\n  }, [sendRequest,auth.UserId,AVAIL,auth.Players.length]);\r\n\r\n \r\n  \r\n\r\n  const [selected,setSelected]=useState(0);\r\n  const [formstate,inputHandler]=useForm(\r\n    {\r\n    first:undefined,\r\n    second:undefined,\r\n    third:undefined,\r\n    fourth:undefined\r\n    },false);\r\n  \r\n  const handleSelection=(selectedValue)=>{\r\n    setSelected(selectedValue.value);\r\n  }\r\n\r\n  const submitHandler=async (event)=>{\r\n    event.preventDefault();\r\n    // setLoacalStoring(true);\r\n    console.log(formstate.inputs+' is from state and selected'+selected);\r\n    var PArray=[formstate.inputs.first.value];\r\n    \r\n     if(selected>1) PArray.push(formstate.inputs.second.value);\r\n     else if(selected>2) PArray.push(formstate.inputs.third.value);\r\n     else PArray.push(formstate.inputs.fourth.value) \r\n    \r\n    // const formData=new FormData();\r\n    //   formData.append('phonenumber',auth.Phone);\r\n    //   formData.append('players',PArray);\r\n    //   formData.append('uid',auth.UserID)\r\n\r\n    const formData=JSON.stringify({\r\n      phonenumber:auth.Phone,\r\n      players:PArray,\r\n     uid:auth.UserId \r\n\r\n  })\r\n      console.log('form data'+formData);\r\n    try {\r\n      const responseData= await sendRequest(`http://localhost:5000/JAI_PUBG/Register`,'POST',{'Content-Type':'application/json'},formData);\r\n       //responese handling\r\n       console.log(responseData.Users.phonenumber+'\\n'+responseData.Users._id+'\\n'+responseData.Users.players+' is response of register');\r\n       auth.LOGIN(responseData.Users._id,responseData.Users.phonenumber,responseData.Users.players)\r\n     } catch (err) {}\r\n    \r\n  }\r\n\r\n//GPay code\r\n// const loadPaymentDataHandler = paymentData => {\r\n//   console.log('App.loadPaymentDataHandler: paymentData', paymentData)\r\n//   // const paymentToken = paymentData.paymentMethodData.tokenizationData.token\r\n// }\r\n\r\n// const paymentAuthorizedHandler = paymentData => {\r\n//   console.log('App.paymentAuthorizedHandler: paymentData', paymentData)\r\n//   // const paymentToken = paymentData.paymentMethodData.tokenizationData.token\r\n//   // TODO execute payment\r\n// }\r\n\r\n// const onUserCanceledHandler = paymentRequest => {\r\n//   console.log('App.onUserCanceledHandler: paymentRequest', paymentRequest)\r\n// }\r\n\r\n// const paymentDataChangedHandler = paymentData => {\r\n//   console.log('App.paymentDataChangedHandler: paymentData', paymentData)\r\n// }\r\n\r\n\r\n\r\n\r\n  return(\r\n    <React.Fragment>\r\n\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      \r\n      {isLoading && (\r\n              <div className=\"center\">\r\n                <LoadingSpinner />\r\n              </div>\r\n            )\r\n       }\r\n      \r\n            {/* if Not loged in back to login page */}\r\n            {!auth.isLogedIn &&\r\n            <Card className=\"authentication\">\r\n              <h1 className=\"authentication__header\"> YOU ARE NOT LOGED IN</h1>\r\n            <Link to='/login'>\r\n              <Button>Click here</Button>\r\n              </Link>\r\n              </Card>\r\n            }\r\n\r\n            {auth.isLogedIn \r\n             && auth.Players.length===4 \r\n            && <Card className=\"authentication\">\r\n              <h1 className=\"authentication__header\"> YOU ALREADY REGISTERED MAX SEAT</h1>\r\n              {/* add imogy */}\r\n              </Card>}\r\n\r\n            {/* SELECT PLAYERS */}\r\n        {!isLoading && auth.isLogedIn && emptySEAT &&  <Card className=\"authentication\">\r\n              <h1 className=\"authentication__header\"> ALL SEATS ARE SALED</h1>\r\n              {/* add imogy */}\r\n              </Card>}\r\n        \r\n        {auth.isLogedIn && !emptySEAT && <form className=\"selector\">\r\n          <Select\r\n           theme={theme => ({\r\n            ...theme,\r\n            borderRadius: 10,\r\n            colors: {\r\n              ...theme.colors,\r\n              primary25: 'lightblue',\r\n              primary: 'black',\r\n            },\r\n          })}\r\n          placeholder=\"Select the number of players,you want to REGISTER\"\r\n          defaultValue={selected}\r\n          onChange={handleSelection}\r\n          options={optionsFine}/>\r\n        </form>}\r\n          \r\n          {selected && \r\n          <h1>You have to pay {selected * 10}₹ </h1>}\r\n          {selected && <Card className=\"authentication\">\r\n            <form className=\"authentication\">\r\n              {selected>0 && <Input\r\n               id=\"first\"\r\n               type=\"text\"\r\n               label='Enter First player name as per PUBG'\r\n               value=''\r\n               element='input'\r\n               validators={[VALIDATOR_REQUIRE()]}\r\n               errorText=\"Enter the field as per PUBG account, otherwise you won't allow for match\"\r\n               onInput={inputHandler}/> }\r\n\r\n               \r\n\r\n              {selected>1 && <Input\r\n               id=\"second\"\r\n               type=\"text\"\r\n               element='input'\r\n               label='Enter Second player name as per PUBG'\r\n               value=''\r\n               validators={[VALIDATOR_REQUIRE()]}\r\n               errorText=\"Enter the field as per PUBG account, otherwise you won't allow for match\"\r\n               onInput={inputHandler}/>}\r\n\r\n\r\n               {selected>2 && <Input\r\n                id=\"third\"\r\n                element='input'\r\n                type=\"text\"\r\n                label='Enter Third player name as per PUBG'\r\n                value=''\r\n                validators={[VALIDATOR_REQUIRE()]}\r\n                errorText=\"Enter the field as per PUBG account, otherwise you won't allow for match\"\r\n                onInput={inputHandler}/> }\r\n\r\n               \r\n\r\n                {selected>3 && <Input\r\n                 id=\"fourth\"\r\n                 type=\"text\"\r\n                 element='input'\r\n                 label='Enter Fourth player name as per PUBG'\r\n                 value=''\r\n                 validators={[VALIDATOR_REQUIRE()]}\r\n                 errorText=\"Enter the field as per PUBG account, otherwise you won't allow for match\"\r\n                 onInput={inputHandler}/>}\r\n\r\n                <hr/>\r\n                <label>\r\n                 <input type=\"checkbox\"  onChange={()=>{setRRselected(!RRselected)}}/>\r\n                 By clicking this u r dead\r\n                 </label>\r\n                 <hr/>\r\n\r\n                 <Button\r\n                 type=\"submit\"\r\n                 onClick={submitHandler}\r\n                 disabled={!RRselected || !formstate.isValid}>\r\n                    JAI PUBG\r\n                 </Button>\r\n            </form>\r\n             </Card>\r\n          }\r\n            {/* {localStoring &&\r\n               <Card className=\"authentication\">\r\n                    <GPayButton\r\n       fi               totalPriceStatus={'FINAL'}\r\n                      totalPrice={'1.45'}\r\n                      currencyCode={'GBP'}\r\n                      countryCode={'GB'}\r\n                      development={true}\r\n                      onLoadPaymentData={loadPaymentDataHandler}\r\n                      onPaymentAuthorized={paymentAuthorizedHandler}\r\n                      onUserCanceled={onUserCanceledHandler}\r\n                    />\r\n                  \r\n                  </Card>\r\n                } */}\r\n   </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}