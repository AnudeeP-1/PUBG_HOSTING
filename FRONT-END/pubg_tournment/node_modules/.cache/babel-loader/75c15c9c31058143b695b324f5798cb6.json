{"ast":null,"code":"var _jsxFileName = \"D:\\\\JAI_PUBG\\\\FRONT-END\\\\pubg_tournment\\\\src\\\\Pages\\\\login.js\";\nimport React, { useState } from 'react';\nimport ErrorModel from '../UIElements/Error';\nimport firebase, { auth, provider } from './firebase.js';\nimport Card from '../UIElements/Card';\nimport LoadingSpinner from '../UIElements/LoadingSpinner';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../FormElements/validater';\nimport Input from '../FormElements/Input';\nimport Button from '../FormElements/Button';\nimport { useForm } from '../Hook/Form-hook';\n\nconst Login = props => {\n  const [isLoading, setLoading] = useState(false);\n  const [otp, setotp] = useState(null);\n  const [formstate, inputHandler, setFormData] = useForm({\n    phone: {\n      value: '',\n      isValid: false\n    },\n    otp: undefined\n  }, false);\n\n  const sendOTP = event => {\n    event.preventDefault();\n    setLoading(true);\n    setFormData({ ...formstate.inputs,\n      phone: { ...formstate.inputs.phone,\n        isValid: false\n      }\n    });\n    var recaptcha = new firebase.auth.RecaptchaVerifier('recaptcha', {\n      size: \"invisible\",\n      callback: function (response) {\n        console.log(\"captcha resolved\");\n      }\n    });\n    var number = '+91' + formstate.inputs.phone.value;\n    firebase.auth().signInWithPhoneNumber(number, recaptcha).then(function (e) {\n      setotp(e);\n      setLoading(false);\n    }).catch(function (error) {\n      console.error(error);\n      setLoading(false);\n    });\n  };\n\n  const verifyOTP = () => {\n    otp.confirm(formstate.inputs.otp.value).then(function (result) {\n      console.log(result.user);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Continue with your phone\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"phone\",\n    type: \"phone\",\n    label: \"Enter your valid phone number\",\n    value: \"\",\n    validators: [VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(6)],\n    errorText: \"Please fill this with valid number\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: sendOTP,\n    disabled: !formstate.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"SEND OTP\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"recaptcha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 10\n    }\n  })), !!otp && /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"otp\",\n    type: \"text\",\n    label: \"Enter OTP you have recieved\",\n    value: \"\",\n    validators: [VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(6)],\n    errorText: \"Enter the OTP\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: verifyOTP,\n    disabled: !formstate.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Verify\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"recaptcha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 10\n    }\n  }))));\n};\n\nexport default Login;","map":{"version":3,"sources":["D:/JAI_PUBG/FRONT-END/pubg_tournment/src/Pages/login.js"],"names":["React","useState","ErrorModel","firebase","auth","provider","Card","LoadingSpinner","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","Input","Button","useForm","Login","props","isLoading","setLoading","otp","setotp","formstate","inputHandler","setFormData","phone","value","isValid","undefined","sendOTP","event","preventDefault","inputs","recaptcha","RecaptchaVerifier","size","callback","response","console","log","number","signInWithPhoneNumber","then","e","catch","error","verifyOTP","confirm","result","user"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\n\r\nimport ErrorModel from '../UIElements/Error';\r\nimport firebase,{auth,provider} from './firebase.js';\r\nimport Card from '../UIElements/Card'\r\nimport LoadingSpinner from '../UIElements/LoadingSpinner'\r\nimport {VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH} from '../FormElements/validater'\r\nimport Input from '../FormElements/Input'\r\nimport Button from '../FormElements/Button'\r\nimport {useForm} from '../Hook/Form-hook'\r\n\r\nconst Login=props=>{\r\n    const [isLoading,setLoading]=useState(false);\r\n    const [otp,setotp]=useState(null);\r\n    const [formstate,inputHandler,setFormData]=useForm(\r\n        {\r\n        phone:{\r\n            value:'',\r\n            isValid:false\r\n        },\r\n        otp:undefined\r\n        },false);\r\n\r\n  const sendOTP=(event)=>{\r\n      event.preventDefault();\r\n      setLoading(true);\r\n      setFormData({\r\n          ...formstate.inputs,\r\n          phone:{\r\n              ...formstate.inputs.phone,\r\n              isValid:false\r\n          }\r\n      })\r\n    var recaptcha = new firebase.auth.RecaptchaVerifier('recaptcha',{\r\n        size:\"invisible\",\r\n        callback:function (response){\r\n            console.log(\"captcha resolved\");\r\n        }\r\n    });\r\n    var number = '+91'+formstate.inputs.phone.value;\r\n    firebase.auth().signInWithPhoneNumber(number,recaptcha).then( function(e) {\r\n        setotp(e);\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n          console.error( error);\r\n          setLoading(false);\r\n      });\r\n    \r\n  }\r\n\r\n  const verifyOTP=()=>{\r\n    otp.confirm(formstate.inputs.otp.value).then(function (result) {\r\n        console.log(result.user);\r\n     }).catch(function (error) {\r\n        console.error( error);\r\n    });\r\n  }\r\n\r\n    return(\r\n    <React.Fragment>\r\n    {isLoading && <LoadingSpinner asOverlay/>}\r\n    <Card className=\"authentication\">\r\n        <h2>Continue with your phone</h2>\r\n        <form>\r\n            <Input\r\n                element='input'\r\n                id=\"phone\"\r\n                type=\"phone\"\r\n                label='Enter your valid phone number'\r\n                value=''\r\n                validators={[VALIDATOR_REQUIRE(),VALIDATOR_MINLENGTH(6)]}\r\n                errorText=\"Please fill this with valid number\"\r\n                onInput={inputHandler}\r\n            />    \r\n            <Button \r\n                type=\"submit\" \r\n                onClick={sendOTP}\r\n                disabled={!formstate.isValid}>\r\n                     SEND OTP\r\n            </Button>\r\n            \r\n         <div id=\"recaptcha\"></div>\r\n        </form>\r\n        {!!otp && <form>\r\n            <Input\r\n                element='input'\r\n                id=\"otp\"\r\n                type=\"text\"\r\n                label='Enter OTP you have recieved'\r\n                value=''\r\n                validators={[VALIDATOR_REQUIRE(),VALIDATOR_MINLENGTH(6)]}\r\n                errorText=\"Enter the OTP\"\r\n                onInput={inputHandler}\r\n            />    \r\n            <Button \r\n                type=\"submit\" \r\n                onClick={verifyOTP}\r\n                disabled={!formstate.isValid}>\r\n                     Verify\r\n            </Button>\r\n            \r\n         <div id=\"recaptcha\"></div>\r\n        </form>}\r\n    </Card>\r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}