{"ast":null,"code":"var _jsxFileName = \"D:\\\\JAI_PUBG\\\\FRONT-END\\\\pubg_tournment\\\\src\\\\Pages\\\\login.js\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ErrorModel from '../UIElements/Error';\nimport firebase from './firebase.js';\nimport Card from '../UIElements/Card';\nimport LoadingSpinner from '../UIElements/LoadingSpinner';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../FormElements/validater';\nimport Input from '../FormElements/Input';\nimport Button from '../FormElements/Button';\nimport { useForm } from '../Hook/Form-hook';\nimport { useHttpClient } from '../Hook/Http-Hook';\nimport './login.css';\nimport { auth } from 'firebase';\n\nconst Login = props => {\n  const [isLoading1, setLoading1] = useState(false);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [otp, setotp] = useState(null);\n  const [error1, seterror] = useState();\n  const history = useHistory();\n  const [formstate, inputHandler, setFormData] = useForm({\n    phone: {\n      value: '',\n      isValid: false\n    },\n    otp: undefined\n  }, false);\n\n  const sendOTP = async event => {\n    event.preventDefault();\n    setLoading1(true);\n    setFormData({ ...formstate.inputs,\n      phone: { ...formstate.inputs.phone,\n        isValid: false\n      }\n    }); //   try{\n    // var recaptcha = new firebase.auth.RecaptchaVerifier('recaptcha',{\n    //     size:\"invisible\",\n    //     callback:function (response){\n    //         console.log(\"captcha resolved\");\n    //     }\n    // });\n    // var number = '+91'+formstate.inputs.phone.value;\n    // firebase.auth().signInWithPhoneNumber(number,recaptcha).then( function(e) {\n    //     setotp(e);\n    //     setLoading1(false);\n    //   })\n    //   .catch(function (error) {\n    //       seterror(\"Your internet seems to be slow or Your number is blocked due to too many request, Try again after sometime\");\n    //       setLoading1(false);\n    //   });\n    // }catch(err){\n    //     setLoading1(false);\n    //     seterror(\"Try again\")\n    // }\n\n    try {\n      console.log(\"sender \" + JSON.stringify({\n        phonenumber: '+91' + formstate.inputs.phone.value\n      }));\n      const responseData = await fetch(`http://localhost:5000/JAI_PUBG/Login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          phonenumber: '+91' + formstate.inputs.phone.value\n        })\n      }); //responese handling\n\n      console.log(\"response is happened\");\n      const data = responseData.json();\n      console.log('response is ' + data);\n    } catch (err) {\n      console.log('error maccha' + err.message);\n    }\n\n    setLoading1(false);\n  };\n\n  const verifyOTP = event => {\n    event.preventDefault();\n    setLoading1(false);\n    otp.confirm(formstate.inputs.otp.value).then(async function (result) {\n      //send post to backend\n      try {\n        console.log(\"sender \" + JSON.stringify({\n          phonenumber: '+91' + formstate.inputs.phone.value\n        }));\n        const responseData = await fetch(`http://localhost:5000/JAI_PUBG/Login`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            phonenumber: '+91' + formstate.inputs.phone.value\n          })\n        }); //responese handling\n\n        console.log(\"response is happened\"); //  const data=await responseData.;\n\n        console.log('response is ' + responseData.phonenumber);\n      } catch (err) {\n        console.log('error maccha' + err.message);\n      } //auth.LOGIN(UserID,Phone,Players)\n\n\n      console.log(result.user);\n      history.push('/');\n    }).catch(function (error) {\n      console.error(error);\n      seterror(\"OTP verification failed\");\n    });\n    setLoading1(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, error1 && /*#__PURE__*/React.createElement(ErrorModel, {\n    error: error1,\n    onClear: () => {\n      seterror();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(ErrorModel, {\n    error: error,\n    onClear: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, isLoading1 && /*#__PURE__*/React.createElement(LoadingSpinner, {\n    asOverlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 20\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"authentication__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, \"Continue with your phone\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"phone\",\n    type: \"phone\",\n    label: \"Enter your valid phone number\",\n    value: \"\",\n    validators: [VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(6)],\n    errorText: \"Please fill this with valid number\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: sendOTP,\n    disabled: !formstate.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, \"SEND OTP\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"recaptcha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 10\n    }\n  })), !!otp && /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"otp\",\n    type: \"text\",\n    label: \"Enter OTP you have recieved\",\n    value: \"\",\n    validators: [VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(6)],\n    errorText: \"Enter the OTP\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: verifyOTP,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, \"Verify\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"recaptcha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 10\n    }\n  }))));\n};\n\nexport default Login;","map":{"version":3,"sources":["D:/JAI_PUBG/FRONT-END/pubg_tournment/src/Pages/login.js"],"names":["React","useState","useHistory","ErrorModel","firebase","Card","LoadingSpinner","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","Input","Button","useForm","useHttpClient","auth","Login","props","isLoading1","setLoading1","isLoading","error","sendRequest","clearError","otp","setotp","error1","seterror","history","formstate","inputHandler","setFormData","phone","value","isValid","undefined","sendOTP","event","preventDefault","inputs","console","log","JSON","stringify","phonenumber","responseData","fetch","method","headers","body","data","json","err","message","verifyOTP","confirm","then","result","user","push","catch"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nimport ErrorModel from '../UIElements/Error';\r\nimport firebase from './firebase.js';\r\nimport Card from '../UIElements/Card'\r\nimport LoadingSpinner from '../UIElements/LoadingSpinner'\r\nimport {VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH} from '../FormElements/validater'\r\nimport Input from '../FormElements/Input'\r\nimport Button from '../FormElements/Button'\r\nimport {useForm} from '../Hook/Form-hook'\r\nimport {useHttpClient} from '../Hook/Http-Hook'\r\nimport './login.css'\r\nimport { auth } from 'firebase';\r\n\r\nconst Login=props=>{\r\n    const [isLoading1,setLoading1]=useState(false);\r\n    const {isLoading,error,sendRequest,clearError}=useHttpClient();\r\n    const [otp,setotp]=useState(null);\r\n    const [error1,seterror]=useState();\r\n    const history=useHistory();\r\n    const [formstate,inputHandler,setFormData]=useForm(\r\n        {\r\n        phone:{\r\n            value:'',\r\n            isValid:false\r\n        },\r\n        otp:undefined\r\n        },false);\r\n\r\n  const sendOTP=async (event)=>{\r\n      event.preventDefault();\r\n      setLoading1(true);\r\n      setFormData({\r\n          ...formstate.inputs,\r\n          phone:{\r\n              ...formstate.inputs.phone,\r\n              isValid:false\r\n          }\r\n      })\r\n    //   try{\r\n    // var recaptcha = new firebase.auth.RecaptchaVerifier('recaptcha',{\r\n    //     size:\"invisible\",\r\n    //     callback:function (response){\r\n    //         console.log(\"captcha resolved\");\r\n    //     }\r\n    // });\r\n    // var number = '+91'+formstate.inputs.phone.value;\r\n    // firebase.auth().signInWithPhoneNumber(number,recaptcha).then( function(e) {\r\n    //     setotp(e);\r\n    //     setLoading1(false);\r\n    //   })\r\n    //   .catch(function (error) {\r\n    //       seterror(\"Your internet seems to be slow or Your number is blocked due to too many request, Try again after sometime\");\r\n    //       setLoading1(false);\r\n    //   });\r\n    // }catch(err){\r\n    //     setLoading1(false);\r\n    //     seterror(\"Try again\")\r\n    // }\r\n\r\n\r\n\r\n    try {\r\n        console.log(\"sender \"+JSON.stringify({\r\n            phonenumber:'+91'+formstate.inputs.phone.value\r\n        }));\r\n        const responseData= await fetch(`http://localhost:5000/JAI_PUBG/Login`,{\r\n            method: 'POST',\r\n            headers:{\r\n            'Content-Type':'application/json'\r\n        },\r\n\r\n        body:JSON.stringify({\r\n            phonenumber:'+91'+formstate.inputs.phone.value\r\n        })});\r\n         //responese handling\r\n         console.log(\"response is happened\");\r\n         const data=responseData.json();\r\n         console.log('response is '+data);\r\n       } catch (err) {\r\n           console.log('error maccha'+err.message);\r\n       }\r\n       setLoading1(false)\r\n\r\n\r\n\r\n    \r\n  }\r\n\r\n  const verifyOTP=(event)=>{\r\n    event.preventDefault();\r\n    setLoading1(false);\r\n    otp.confirm(formstate.inputs.otp.value).then(async function (result) {\r\n        \r\n        //send post to backend\r\n        try {\r\n            console.log(\"sender \"+JSON.stringify({\r\n                phonenumber:'+91'+formstate.inputs.phone.value\r\n            }));\r\n            const responseData= await fetch(`http://localhost:5000/JAI_PUBG/Login`,{\r\n                method: 'POST',\r\n                headers:{\r\n                'Content-Type':'application/json'\r\n            },\r\n\r\n            body:JSON.stringify({\r\n                phonenumber:'+91'+formstate.inputs.phone.value\r\n            })});\r\n             //responese handling\r\n             console.log(\"response is happened\");\r\n            //  const data=await responseData.;\r\n             console.log('response is '+responseData.phonenumber);\r\n           } catch (err) {\r\n               console.log('error maccha'+err.message);\r\n           }\r\n        //auth.LOGIN(UserID,Phone,Players)\r\n\r\n        console.log(result.user);\r\n        history.push('/');\r\n     }).catch(function (error) {\r\n        console.error( error);\r\n        seterror(\"OTP verification failed\");\r\n    });\r\n    setLoading1(false);\r\n  }\r\n\r\n    return(\r\n    <React.Fragment>    \r\n\r\n    {error1 && <ErrorModel error={error1} onClear={()=>{seterror()}}/>}\r\n    <ErrorModel error={error} onClear={clearError}/>\r\n    {isLoading && <LoadingSpinner asOverlay/>}\r\n    <Card className=\"authentication\">\r\n        \r\n    {isLoading1 && <LoadingSpinner asOverlay/>}\r\n        <h2 className=\"authentication__header\">Continue with your phone</h2>\r\n        <form >\r\n            <Input\r\n                element='input'\r\n                id=\"phone\"\r\n                type=\"phone\"\r\n                label='Enter your valid phone number'\r\n                value=''\r\n                validators={[VALIDATOR_REQUIRE(),VALIDATOR_MINLENGTH(6)]}\r\n                errorText=\"Please fill this with valid number\"\r\n                onInput={inputHandler}\r\n            />    \r\n            <Button \r\n                type=\"submit\" \r\n                onClick={sendOTP}\r\n                disabled={!formstate.isValid}>\r\n                     SEND OTP\r\n            </Button>\r\n            \r\n         <div id=\"recaptcha\"></div>\r\n        </form>\r\n        {!!otp && <form>\r\n            <Input\r\n                element='input'\r\n                id=\"otp\"\r\n                type=\"text\"\r\n                label='Enter OTP you have recieved'\r\n                value=''\r\n                validators={[VALIDATOR_REQUIRE(),VALIDATOR_MINLENGTH(6)]}\r\n                errorText=\"Enter the OTP\"\r\n                onInput={inputHandler}\r\n            />    \r\n            <Button \r\n                type=\"submit\" \r\n                onClick={verifyOTP}>\r\n                     Verify\r\n            </Button>\r\n            \r\n         <div id=\"recaptcha\"></div>\r\n        </form>}\r\n    </Card>\r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}