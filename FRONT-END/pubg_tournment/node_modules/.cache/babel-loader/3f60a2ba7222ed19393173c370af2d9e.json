{"ast":null,"code":"var _jsxFileName = \"D:\\\\JAI_PUBG\\\\FRONT-END\\\\pubg_tournment\\\\src\\\\Pages\\\\findMatch.js\";\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport { useHistory } from 'react-router-dom';\nimport './findMatch.css';\nimport Input from 'react-select/src/components/Input';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../FormElements/validater';\nimport Card from '../UIElements/Card';\nimport Button from '../FormElements/Button';\nimport { useForm } from '../Hook/Form-hook';\n\nconst Signup = props => {\n  const options = [{\n    value: '1',\n    label: 'One'\n  }, {\n    value: '2',\n    label: 'Two'\n  }, {\n    value: '3',\n    label: 'Three'\n  }, {\n    value: '4',\n    label: 'Four'\n  }];\n  const [selected, setSelected] = useState(null);\n  const [formstate, inputHandler, setFormData] = useForm({\n    first: {\n      value: '',\n      isValid: false\n    },\n    second: undefined,\n    third: undefined,\n    fourth: undefined\n  }, false);\n\n  const handleSelection = selectedValue => {\n    setSelected(selectedValue.value);\n    console.log(selectedValue.value);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    console.log(formstate);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    theme: theme => ({ ...theme,\n      borderRadius: 10,\n      colors: { ...theme.colors,\n        primary25: 'lightblue',\n        primary: 'black'\n      }\n    }),\n    placeholder: \"Select the number of players,you want to REGISTER\",\n    defaultValue: selected,\n    onChange: handleSelection,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })), selected && /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, selected > 0 && /*#__PURE__*/React.createElement(Input, {\n    id: \"first\",\n    type: \"text\",\n    label: \"Enter First player name as per PUBG\",\n    value: \"\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Enter the field as per PUBG account, otherwise you won't allow for match\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 30\n    }\n  }), selected > 1 && /*#__PURE__*/React.createElement(Input, {\n    id: \"second\",\n    type: \"text\",\n    label: \"Enter Second player name as per PUBG\",\n    value: \"\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Enter the field as per PUBG account, otherwise you won't allow for match\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 30\n    }\n  }), selected > 2 && /*#__PURE__*/React.createElement(Input, {\n    id: \"third\",\n    type: \"text\",\n    label: \"Enter Third player name as per PUBG\",\n    value: \"\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Enter the field as per PUBG account, otherwise you won't allow for match\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 31\n    }\n  }), selected > 3 && /*#__PURE__*/React.createElement(Input, {\n    id: \"fourth\",\n    type: \"text\",\n    label: \"Enter Fourth player name as per PUBG\",\n    value: \"\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Enter the field as per PUBG account, otherwise you won't allow for match\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: submitHandler,\n    disabled: !formstate.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 18\n    }\n  }))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["D:/JAI_PUBG/FRONT-END/pubg_tournment/src/Pages/findMatch.js"],"names":["React","useState","Select","useHistory","Input","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","Card","Button","useForm","Signup","props","options","value","label","selected","setSelected","formstate","inputHandler","setFormData","first","isValid","second","undefined","third","fourth","handleSelection","selectedValue","console","log","submitHandler","event","preventDefault","theme","borderRadius","colors","primary25","primary"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Select from 'react-select'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nimport './findMatch.css'\r\nimport Input from 'react-select/src/components/Input'\r\nimport {VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH} from '../FormElements/validater'\r\nimport Card from '../UIElements/Card'\r\nimport Button from '../FormElements/Button'\r\nimport {useForm} from '../Hook/Form-hook'\r\n\r\nconst Signup=props=>{\r\n\r\n  const options=[\r\n    {value:'1',label:'One'},\r\n    {value:'2',label:'Two'},\r\n    {value:'3',label:'Three'},\r\n    {value:'4',label:'Four'}\r\n  ];\r\n\r\n  const [selected,setSelected]=useState(null);\r\n  const [formstate,inputHandler,setFormData]=useForm(\r\n    {\r\n    first:{\r\n        value:'',\r\n        isValid:false\r\n    },\r\n    second:undefined,\r\n    third:undefined,\r\n    fourth:undefined\r\n    },false);\r\n  \r\n  const handleSelection=(selectedValue)=>{\r\n    setSelected(selectedValue.value);\r\n    console.log(selectedValue.value);\r\n  }\r\n\r\n  const submitHandler=event=>{\r\n    event.preventDefault();\r\n    console.log(formstate);\r\n\r\n    \r\n  }\r\n\r\n  return(\r\n    <React.Fragment>\r\n      \r\n      \r\n        <form className=\"selector\">\r\n          <Select\r\n           theme={theme => ({\r\n            ...theme,\r\n            borderRadius: 10,\r\n            colors: {\r\n              ...theme.colors,\r\n              primary25: 'lightblue',\r\n              primary: 'black',\r\n            },\r\n          })}\r\n          placeholder=\"Select the number of players,you want to REGISTER\"\r\n          defaultValue={selected}\r\n          onChange={handleSelection}\r\n          options={options}/>\r\n        </form>\r\n\r\n          {selected && <Card className=\"authentication\">\r\n            <form>\r\n              {selected>0 && <Input\r\n               id=\"first\"\r\n               type=\"text\"\r\n               label='Enter First player name as per PUBG'\r\n               value=''\r\n               validators={[VALIDATOR_REQUIRE()]}\r\n               errorText=\"Enter the field as per PUBG account, otherwise you won't allow for match\"\r\n               onInput={inputHandler}/>}\r\n\r\n              {selected>1 && <Input\r\n               id=\"second\"\r\n               type=\"text\"\r\n               label='Enter Second player name as per PUBG'\r\n               value=''\r\n               validators={[VALIDATOR_REQUIRE()]}\r\n               errorText=\"Enter the field as per PUBG account, otherwise you won't allow for match\"\r\n               onInput={inputHandler}/>}\r\n\r\n               {selected>2 && <Input\r\n                id=\"third\"\r\n                type=\"text\"\r\n                label='Enter Third player name as per PUBG'\r\n                value=''\r\n                validators={[VALIDATOR_REQUIRE()]}\r\n                errorText=\"Enter the field as per PUBG account, otherwise you won't allow for match\"\r\n                onInput={inputHandler}/>}\r\n\r\n                {selected>3 && <Input\r\n                 id=\"fourth\"\r\n                 type=\"text\"\r\n                 label='Enter Fourth player name as per PUBG'\r\n                 value=''\r\n                 validators={[VALIDATOR_REQUIRE()]}\r\n                 errorText=\"Enter the field as per PUBG account, otherwise you won't allow for match\"\r\n                 onInput={inputHandler}/>}\r\n                 <Button\r\n                 onClick={submitHandler}\r\n                 disabled={!formstate.isValid}/>\r\n            </form>\r\n            </Card>}\r\n   </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}